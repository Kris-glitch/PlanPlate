<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="PlanPlate.View.RecipeDetails"
             xmlns:model="clr-namespace:PlanPlate.Data.Model"
             xmlns:viewmodel="clr-namespace:PlanPlate.ViewModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:DataType="viewmodel:RecipeDetailsViewModel"
             xmlns:views="clr-namespace:PlanPlate.View"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             Title="{Binding Recipe.Data.Name}">


    <ScrollView>

        <StackLayout Padding="0"
                     BackgroundColor="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}"
                     Margin="0,0,0,0">

            <Label Text="{Binding ErrorMessage}"
                   IsVisible="{Binding Recipe.Exception, Converter={toolkit:IsNotNullConverter}}"
                   TextColor="{AppThemeBinding Dark={StaticResource ErrorDark}, Light={StaticResource Error}}"
                   FontSize="20"
                   VerticalTextAlignment="Center"
                   HorizontalTextAlignment="Center"
                   Margin="10"
                   FontFamily="OutfitRegular"
                   VerticalOptions="Center"
                   HorizontalOptions="Center" />

            <Frame Margin="0,0,0,25"
                   IsVisible="{Binding Recipe.Data, Converter={toolkit:IsNotNullConverter}}"
                   CornerRadius="20"
                   HeightRequest="350"
                   WidthRequest="350"
                   HorizontalOptions="Center"
                   VerticalOptions="Center">
                <Image Source="{Binding Recipe.Data.Image}"
                       Aspect="AspectFill"
                       HeightRequest="350"
                       WidthRequest="350" />
            </Frame>

            <Frame CornerRadius="25"
                   IsVisible="{Binding Recipe.Data, Converter={toolkit:IsNotNullConverter}}"
                   BackgroundColor="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource Surface}}"
                   Margin="0,20,0,0"
                   HorizontalOptions="FillAndExpand"
                   VerticalOptions="FillAndExpand"
                   Padding="16">

                <Grid x:DataType="viewmodel:RecipeDetailsViewModel"
                      HorizontalOptions="FillAndExpand"
                      VerticalOptions="FillAndExpand"
                      ColumnDefinitions="*,*,*"
                      RowSpacing="0"
                      BackgroundColor="{AppThemeBinding Light={StaticResource Surface}, Dark={StaticResource SurfaceDark}}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Frame Padding="25"
                           Grid.Row="1"
                           Grid.ColumnSpan="3"
                           CornerRadius="20"
                           BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundDark}, Light={StaticResource Background}}"
                           IsVisible="{Binding IsAddToPlannerVisible}"
                           VerticalOptions="Center"
                           HorizontalOptions="FillAndExpand">
                        <Frame.Content>
                            <StackLayout Orientation="Vertical" Spacing="16">
                                <Label Text="Add Recipe To Meal Planner"
                                       Margin="0,25,0,0"
                                       Style="{StaticResource SubHeadline}"
                                       TextColor="{AppThemeBinding Light={StaticResource TextLight}, Dark={StaticResource TextDark}}"
                                       VerticalOptions="Center"
                                       HorizontalOptions="Center" />

                                <Picker Title="Select a category"
                                        VerticalOptions="Center"
                                        HorizontalOptions="Center"
                                        TextColor="{AppThemeBinding Dark={StaticResource TextDark}, Light={StaticResource TextLight}}"
                                        ItemsSource="{Binding DropDownCategories}"
                                        SelectedItem="{Binding SelectedCategory}"
                                        BackgroundColor="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource Surface}}" />

                                <DatePicker Date="{Binding SelectedDate, Mode=TwoWay}"
                                            VerticalOptions="Center"
                                            BackgroundColor="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource Surface}}"
                                            MinimumDate="{x:Static sys:DateTime.Now}"
                                            HorizontalOptions="Center" />

                                <StackLayout Orientation="Horizontal"
                                             Spacing="20">
                                    <Button Command="{Binding AddRecipeToPlannerCommand}"
                                            VerticalOptions="Start"
                                            HorizontalOptions="Start"
                                            Style="{StaticResource ButtonStyle}"
                                            MinimumHeightRequest="44"
                                            MinimumWidthRequest="130"
                                            Margin="20,0,0,0"
                                            Text="Save"
                                            IsEnabled="True" />
                                    <Button Command="{Binding HidePopupCommand}"
                                            VerticalOptions="Start"
                                            HorizontalOptions="End"
                                            Style="{StaticResource ButtonStyle}"
                                            MinimumHeightRequest="44"
                                            MinimumWidthRequest="130"
                                            Margin="0,0,20,0"
                                            Text="Cancel"
                                            IsEnabled="True" />
                                </StackLayout>
                                
                                
                            </StackLayout>
                        </Frame.Content>

                    </Frame>

                    <Button Grid.Row="1"
                            Grid.Column="0"
                            IsEnabled="True"
                            Command="{Binding OpenAddPopupCommand}"
                            Margin="0,0,0,0"
                            MinimumHeightRequest="25"
                            MinimumWidthRequest="100"
                            HorizontalOptions="Center"
                            Style="{StaticResource ButtonStyle}"
                            Text="Plan">
                        <Button.ImageSource>
                            <FontImageSource FontFamily="FAS"
                                             Glyph="{StaticResource calendarplus}"
                                             Color="{AppThemeBinding Light={StaticResource TextLight}, Dark={StaticResource TextDark}}"
                                             Size="24" />
                        </Button.ImageSource>
                    </Button>

                    <Button Grid.Row="1"
                            Grid.Column="1"
                            Margin="0,0,0,0"
                            MinimumHeightRequest="50"
                            MinimumWidthRequest="100"
                            HorizontalOptions="Center"
                            Style="{StaticResource ButtonStyle}"
                            Command="{Binding ShareRecipeCommand}"
                            Text="Share">
                        <Button.ImageSource>
                            <FontImageSource FontFamily="FAR"
                                             Glyph="{StaticResource share}"
                                             Color="{AppThemeBinding Light={StaticResource TextLight}, Dark={StaticResource TextDark}}"
                                             Size="24" />
                        </Button.ImageSource>
                        
                    </Button>

                    <Button Grid.Row="1"
                            Grid.Column="2"
                            Margin="0,0,0,0"
                            MinimumHeightRequest="20"
                            MinimumWidthRequest="100"
                            HorizontalOptions="Center"
                            Style="{StaticResource ButtonStyle}"
                            Command="{Binding UpdateRecipeCommand}"
                            Text="Edit">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding RecipeType, Source={RelativeSource AncestorType={x:Type viewmodel:RecipeDetailsViewModel}}}"
                                         Value="{x:Static viewmodel:RecipeFrom.Cookbook}">
                                <Setter Property="IsVisible"
                                        Value="True" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                         Binding="{Binding RecipeType, Source={RelativeSource AncestorType={x:Type viewmodel:RecipeDetailsViewModel}}}"
                                         Value="{x:Static viewmodel:RecipeFrom.OnlineApi}">
                                <Setter Property="IsVisible"
                                        Value="False" />
                            </DataTrigger>
                        </Button.Triggers>
                        <Button.ImageSource>
                            <FontImageSource FontFamily="FAR"
                                             Glyph="{StaticResource edit}"
                                             Color="{AppThemeBinding Light={StaticResource TextLight}, Dark={StaticResource TextDark}}"
                                             Size="24" />
                        </Button.ImageSource>
                    </Button>

                    <Label Grid.Row="2"
                           Grid.ColumnSpan="3"
                           VerticalOptions="Center"
                           Margin="20,20,16,16"
                           HorizontalOptions="Start"
                           Text="Ingredients"
                           TextColor="{AppThemeBinding Light={StaticResource TextLight}, Dark={StaticResource TextDark}}"
                           Style="{StaticResource SubHeadline}"
                           VerticalTextAlignment="Center">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding ListType}"
                                         Value="{x:Static viewmodel:ActionType.Ingredients}">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource ButtonDark}, Light={StaticResource Button}}" />
                            </DataTrigger>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding ListType}"
                                         Value="{x:Static viewmodel:ActionType.Instructions}">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Light={StaticResource TextLight}, Dark={StaticResource TextDark}}" />
                            </DataTrigger>
                        </Label.Triggers>
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding IngredientsOrPropertyClickedCommand}"
                                                  CommandParameter="{x:Static viewmodel:ActionType.Ingredients}" />
                        </Label.GestureRecognizers>
                    </Label>
                    <Label Grid.Row="2"
                           Grid.ColumnSpan="3"
                           Margin="16,20,20,16"
                           VerticalOptions="Center"
                           HorizontalOptions="End"
                           Text="Instructions"
                           TextColor="{AppThemeBinding Light={StaticResource TextLight}, Dark={StaticResource TextDark}}"
                           Style="{StaticResource SubHeadline}"
                           VerticalTextAlignment="Center">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding ListType}"
                                         Value="{x:Static viewmodel:ActionType.Instructions}">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Dark={StaticResource ButtonDark}, Light={StaticResource Button}}" />
                            </DataTrigger>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding ListType}"
                                         Value="{x:Static viewmodel:ActionType.Ingredients}">
                                <Setter Property="TextColor"
                                        Value="{AppThemeBinding Light={StaticResource TextLight}, Dark={StaticResource TextDark}}" />
                            </DataTrigger>
                        </Label.Triggers>
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding IngredientsOrPropertyClickedCommand}"
                                                  CommandParameter="{x:Static viewmodel:ActionType.Instructions}" />
                        </Label.GestureRecognizers>
                    </Label>
                    
                    <ListView VerticalOptions="StartAndExpand"
                              VerticalScrollBarVisibility="Never"
                              SeparatorVisibility="None"
                              Margin="20,16,0,0"
                              Grid.Row="3"
                              Grid.ColumnSpan="2"
                              x:Name="IngredientsListView"
                              IsVisible="True"
                              ItemsSource="{Binding Recipe.Data.Ingredients}">
                        <ListView.Triggers>
                            <DataTrigger TargetType="ListView"
                                         Binding="{Binding ListType, Source={RelativeSource AncestorType={x:Type viewmodel:RecipeDetailsViewModel}}}"
                                         Value="{x:Static viewmodel:ActionType.Ingredients}">
                                <Setter Property="IsVisible"
                                        Value="True" />
                            </DataTrigger>
                            <DataTrigger TargetType="ListView"
                                         Binding="{Binding ListType, Source={RelativeSource AncestorType={x:Type viewmodel:RecipeDetailsViewModel}}}"
                                         Value="{x:Static viewmodel:ActionType.Instructions}">
                                <Setter Property="IsVisible"
                                        Value="False" />
                            </DataTrigger>
                        </ListView.Triggers>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="model:Ingredient">
                                <ViewCell>
                                    <ScrollView>
                                        <StackLayout Orientation="Horizontal"
                                                     Spacing="5">
                                            <Label Style="{StaticResource LabelStyle}"
                                                   Text="{Binding Quantity}" />
                                            <Label Style="{StaticResource LabelStyle}"
                                                   Text="{Binding Unit}" />
                                            <Label Style="{StaticResource LabelStyle}"
                                                   Text="{Binding Name}" />
                                        </StackLayout>
                                    </ScrollView>
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Label VerticalOptions="StartAndExpand"
                           Grid.Row="3"
                           Grid.ColumnSpan="3"
                           Margin="20,0,0,0"
                           Style="{StaticResource LabelStyle}"
                           IsVisible="False"
                           Text="{Binding Recipe.Data.Instructions}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding ListType,Source={RelativeSource AncestorType={x:Type viewmodel:RecipeDetailsViewModel}}}"
                                         Value="{x:Static viewmodel:ActionType.Ingredients}">
                                <Setter Property="IsVisible"
                                        Value="False" />
                            </DataTrigger>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding ListType,Source={RelativeSource AncestorType={x:Type viewmodel:RecipeDetailsViewModel}}}"
                                         Value="{x:Static viewmodel:ActionType.Instructions}">
                                <Setter Property="IsVisible"
                                        Value="True" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>
            </Frame>
        </StackLayout>
    </ScrollView>

</ContentPage>